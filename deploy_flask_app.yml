# Main playbook for Flask app deployment
---
- name: Deploy Flask application on app servers
  hosts: app_servers
  become: yes
  
  vars:
    github_repo: 'https://github.com/vinod-kayartaya/flask-products-api'  
    # Replace with your repo URL
    app_dir: /opt/flask_app
    venv_dir: "{{ app_dir }}/venv"
    env_vars:
      DB_HOST: '192.168.0.21'            
      DB_NAME: 'flask_app_db'
      DB_USER: 'flask_user'
      DB_PASSWORD: 'password'  
    gunicorn_service_name: flask_gunicorn

  tasks:
    - name: Ensure Python 3 is latest installed
      apt:
        name: python3 python3-venv python3-pip
        state: latest
        update_cache: yes

    - name: Clone Flask application repository
      git:
        repo: "{{ github_repo }}"
        dest: "{{ app_dir }}"
        version: main
        force: yes

    - name: Create virtual environment
      command: python3 -m venv "{{ venv_dir }}"
      args:
        creates: "{{ venv_dir }}/bin/activate"

    - name: Install dependencies from requirements.txt
      pip:
        requirements: "{{ app_dir }}/requirements.txt"
        virtualenv: "{{ venv_dir }}"

    - name: Create environment variables file
      copy:
        dest: "{{ app_dir }}/.env"
        content: |
          {% for key, value in env_vars.items() %}
          {{ key }}={{ value }}
          {% endfor %}

    - name: Install Gunicorn in virtual environment
      pip:
        name: gunicorn
        virtualenv: "{{ venv_dir }}"

    - name: Create systemd service for Gunicorn
      copy:
        dest: /etc/systemd/system/{{ gunicorn_service_name }}.service
        content: |
          [Unit]
          Description=Gunicorn instance to serve Flask app
          After=network.target

          [Service]
          User={{ ansible_user }}
          WorkingDirectory={{ app_dir }}
          EnvironmentFile={{ app_dir }}/.env
          ExecStart={{ venv_dir }}/bin/gunicorn --workers 3 --bind 0.0.0.0:8000 wsgi:app

          [Install]
          WantedBy=multi-user.target
      notify: restart gunicorn

    - name: Enable and start Gunicorn service
      systemd:
        name: {{ gunicorn_service_name }}
        enabled: yes
        state: started

  handlers:
    - name: restart gunicorn
      systemd:
        name: {{ gunicorn_service_name }}
        state: restarted